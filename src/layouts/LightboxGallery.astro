---
const { images } = Astro.props;
---

<div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
  {images.map((src, index) => (
    <img
      src={src}
      alt="Zafu"
      class="rounded-lg shadow-md w-full object-cover cursor-pointer hover:opacity-80 transition"
      data-index={index}
    />
  ))}
</div>

<div id="lightbox" class="fixed inset-0 bg-black bg-opacity-80 hidden items-center justify-center z-50 relative">
  <button id="prev" class="absolute left-4 text-white text-3xl top-1/2 -translate-y-1/2">&#10094;</button>
  <img id="lightbox-img" src="" alt="Zafu agrandi" class="max-h-[90%] max-w-[90%] rounded-lg shadow-xl" />
  <button id="next" class="absolute right-4 text-white text-3xl top-1/2 -translate-y-1/2">&#10095;</button>
</div>

<script is:inline client:load>
  const images = document.querySelectorAll("[data-index]");
  const lightbox = document.getElementById("lightbox");
  const img = document.getElementById("lightbox-img");
  const prevBtn = document.getElementById("prev");
  const nextBtn = document.getElementById("next");

  let currentIndex = 0;

  function showLightbox(index) {
    currentIndex = index;
    img.src = images[currentIndex].getAttribute("src");
    lightbox.classList.remove("hidden");
    lightbox.classList.add("flex");
  }

  function hideLightbox() {
    lightbox.classList.add("hidden");
    lightbox.classList.remove("flex");
  }

  function showPrev() {
    currentIndex = (currentIndex - 1 + images.length) % images.length;
    img.src = images[currentIndex].getAttribute("src");
  }

  function showNext() {
    currentIndex = (currentIndex + 1) % images.length;
    img.src = images[currentIndex].getAttribute("src");
  }

  images.forEach((image, index) => {
    image.addEventListener("click", () => showLightbox(index));
  });

  prevBtn.addEventListener("click", (e) => { e.stopPropagation(); showPrev(); });
  nextBtn.addEventListener("click", (e) => { e.stopPropagation(); showNext(); });
  lightbox.addEventListener("click", hideLightbox);
</script>
