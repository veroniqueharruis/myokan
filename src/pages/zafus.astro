---
import Base from "../layouts/Layout.astro";
import { Icon } from "astro-icon/components";

const zafus = [
  { name: "S", height: "28", width: "13", price: "25", type: "○ Vide"},
  { name: "M", height: "30", width: "15", price: "27", type: "○ Vide"},
  { name: "L", height: "32", width: "20", price: "30", type: "○ Vide"},
  { name: "S", height: "28", width: "13", price: "40", type: "● Plein"},
  { name: "M", height: "30", width: "15", price: "45", type: "● Plein"},
  { name: "L", height: "32", width: "20", price: "50", type: "● Plein"},
];

const zafuInfo = {
  material: "100% coton",
  colors: ["Noir", "Marron", "Rouge", "Vert", "Bleu"],
  customColors: true,
  filling: "Kapok (fibre végétale provenant du kapokier, récoltée en Asie, Amérique du Sud, Afrique)",
  customMade: true,
  orderEmail: "myokan@hotmail.fr",
};

const colorMap = {
  "Noir": "#000000",
  "Marron": "#b37d58",
  "Rouge": "#C21807",
  "Vert": "#809100",
  "Bleu": "#446087",
};

const images = [
  "zafus-vides-gris.webp",
  "zafu-plein-violet-pois.webp",
  "zafu-plein-violet.webp",
  "zafu-plein-orange.webp",
  "zafu-vide-framboise.webp",
  "zafus-pile.webp",
  "zafu-bleu-fonce.webp",  
];
---

<Base title="Zafus artisanaux">
  <main class="mt-16 px-4 max-w-6xl mx-auto">
    <h2 class="text-4xl lg:text-5xl font-bold text-gray-800">Trouvez votre zafu&nbsp;!</h2>
    <p class="text-lg mt-4 text-gray-600">Zafus artisanaux réalisés dans la tradition japonaise par une nonne zen.</p>

    <!-- Blockquote -->
    <blockquote class="mt-6 border-l-4 border-purple-500 pl-4 text-gray-700 bg-purple-50 rounded-r-lg py-2">
      <p class="italic">
        Le fait de s’asseoir sur un zafu, quoi que vous fassiez de toute façon, va vous mener vers la respiration zen abdominale. L’énergie va remplir toutes les cellules et le mental va se calmer.
      </p>
      <p>Le maître zen Kosen Thibaut</p>
    </blockquote>

    <!-- Zafu Selector -->
    <div class="mt-10 p-4 bg-gray-50 border rounded-lg shadow-sm">
      <h3 class="text-xl font-semibold mb-4">Choisissez votre zafu</h3>
      <div class="flex flex-wrap gap-4">
        <div>
          <label for="size" class="block text-sm font-medium text-gray-700">Taille</label>
          <select id="size" class="mt-1 block border rounded-md px-2 py-1">
            <option value="">Choisissez</option>
            <option value="S">S</option>
            <option value="M">M</option>
            <option value="L">L</option>
          </select>
        </div>
        <div>
          <label for="type" class="block text-sm font-medium text-gray-700">Type</label>
          <select id="type" class="mt-1 block border rounded-md px-2 py-1">
            <option value="">Choisissez</option>
            <option value="Vide">Vide</option>
            <option value="Plein">Plein</option>
          </select>
        </div>
        <div>
          <label for="color" class="block text-sm font-medium text-gray-700">Couleur</label>
          <select id="color" class="mt-1 block border rounded-md px-2 py-1">
            <option value="">Choisissez</option>
            {zafuInfo.colors.map((c) => (
              <option value={c}>{c}</option>
            ))}
            {zafuInfo.customColors && <option value="personnalise">Personnalisée</option>}
          </select>
        </div>
      </div>

      <!-- Code Box always visible -->
      <div id="code-box" class="mt-6">
        <p class="text-sm text-gray-600 mb-2">Code de commande :</p>
        <div class="flex items-center gap-2">
          <input id="order-code" type="text" readonly class="w-full border rounded-md px-2 py-1 bg-gray-100 text-gray-800" placeholder="Sélectionnez taille, type et couleur" />
          <button id="copy-btn" class="px-3 py-1 bg-purple-600 text-white rounded-md hover:bg-purple-700 disabled:opacity-50" disabled>Copier</button>
        </div>
      </div>
    </div>

    <!-- Tableau -->
    <div class="overflow-x-auto mt-8">
      <table class="min-w-full border border-gray-200 divide-y divide-gray-200 text-left">
        <thead class="bg-gray-100">
          <tr>
            <th class="px-4 py-2">Taille</th>
            <th class="px-4 py-2">Type</th>
            <th class="px-4 py-2">Hauteur (cm)</th>
            <th class="px-4 py-2">Largeur (cm)</th>
            <th class="px-4 py-2">Prix (€)</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
          {zafus.map((zafu, index) => (
            <tr class={index % 2 === 0 ? "bg-white" : "bg-gray-50"}>
              <td class="px-4 py-2 font-semibold">{zafu.name}</td>
              <td class="px-4 py-2">{zafu.type}</td>
              <td class="px-4 py-2">{zafu.height}</td>
              <td class="px-4 py-2">{zafu.width}</td>
              <td class="px-4 py-2">{zafu.price}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>

    <!-- Galerie -->
    <div class="mt-12">
      <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
        {images.map((src, index) => (
          <img
            src={src}
            alt="Zafu"
            class="rounded-lg shadow-md w-full object-cover cursor-pointer hover:opacity-80 transition"
            data-index={index}
          />
        ))}
      </div>
    </div>

    <!-- Infos -->
    <div class="mt-6 text-gray-700">
      <p><strong>Matériau&nbsp;:</strong> {zafuInfo.material}</p>

      <!-- Nuancier HTML -->
      <div class="mt-4">
        <p class="font-semibold mb-2">Couleurs disponibles</p>
        <div class="flex flex-wrap gap-4 items-center">
          {zafuInfo.colors.map((color) => (
            <div class="flex flex-col items-center text-center">
              <div
                role="img"
                aria-label={color}
                title={color}
                style={`background: ${colorMap[color] || "#cccccc"}`}
                class="w-12 h-12 rounded-full border border-gray-300 shadow-sm"
              />
              <span class="text-sm mt-2">{color}</span>
            </div>
          ))}
          {zafuInfo.customColors && (
            <div class="flex flex-col items-center text-center">
              <div class="w-12 h-12 rounded-full border border-dashed border-gray-300 flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
                </svg>
              </div>
              <span class="text-sm mt-2">Couleur sur-mesure</span>
            </div>
          )}
        </div>
        <p class="text-xs text-gray-500 mt-3">Les teintes affichées sont indicatives.</p>
      </div>

      {zafuInfo.customColors && <p class="mt-3">Vous pouvez demander une couleur à votre convenance (ex: rouge carmin, bleu turquoise, vert émeraude…)</p>}
      <p class="mt-2"><strong>Remplissage&nbsp;:</strong> {zafuInfo.filling}</p>
      {zafuInfo.customMade && <p>Je fabrique des zafus sur mesure.</p>}
      <p class="mt-4 font-semibold">Commandes par mail : <a href={`mailto:${zafuInfo.orderEmail}`} class="text-gray-800 underline">{zafuInfo.orderEmail}</a></p>
    </div>
  </main>

  <script is:inline>
    const orderCode = document.getElementById("order-code");
    const copyBtn = document.getElementById("copy-btn");

    function updateCode() {
      const size = document.getElementById("size").value;
      const type = document.getElementById("type").value;
      const color = document.getElementById("color").value;

      // Only generate code if all three values are selected (not empty)
      if (size && type && color) {
        const code = `ZAFU-${size}-${type}-${color}`;
        orderCode.value = code;
        copyBtn.disabled = false;
      } else {
        orderCode.value = "Sélectionnez taille, type et couleur";
        copyBtn.disabled = true;
      }
    }

    document.getElementById("size").addEventListener("change", updateCode);
    document.getElementById("type").addEventListener("change", updateCode);
    document.getElementById("color").addEventListener("change", updateCode);

    copyBtn.addEventListener("click", () => {
      orderCode.select();
      document.execCommand("copy");
      copyBtn.textContent = "Copié !";
      setTimeout(() => (copyBtn.textContent = "Copier"), 1500);
    });
  </script>
</Base>
