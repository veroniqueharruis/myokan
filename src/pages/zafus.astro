---
import Base from "../layouts/Layout.astro";

const sizes = [
  { name: "S", width: 28, height: 13 },
  { name: "M", width: 30, height: 15 },
  { name: "L", width: 32, height: 17 },
  { name: "Sur mesure", width: null, height: null },
];

const types = ["Vide", "Plein"];

const baseColors = [
  { name: "Noir", hex: "#000000", img: "/zafu-plein-noir.webp" },
  { name: "Rouge", hex: "#FF0000", img: "/zafu-plein-rouge.webp" },
  { name: "Vert", hex: "#008000", img: "/zafu-plein-vert.webp" },
  { name: "Bleu", hex: "#0000FF", img: "/zafu-plein-bleu.webp" },
  { name: "Marron", hex: "#4B2E1E", img: "/zafu-plein-marron.webp" },
];
---

<Base title="Personnalisez votre zafu">
  <div class="max-w-2xl mx-auto p-6">
    <h1 class="text-2xl font-bold text-center">Configurez votre zafu idÃ©al !</h1>

    <!-- Image principale -->
    <div class="mt-6 text-center relative inline-block">
      <img 
        id="main-zafu-image" 
        src="/zafu-plein-violet-pois.webp" 
        alt="Votre zafu personnalisÃ©" 
        class="mx-auto w-64 h-auto rounded-lg shadow-md transition-all duration-300 cursor-pointer relative z-10"
      />
      <div 
        id="color-overlay"
        class="absolute top-0 left-0 w-full h-full rounded-lg mix-blend-multiply opacity-60 pointer-events-none hidden"
      ></div>
    </div>

    <!-- Lightbox -->
    <div 
      id="lightbox" 
      class="fixed inset-0 bg-black bg-opacity-80 hidden items-center justify-center z-50"
    >
      <img 
        id="lightbox-img" 
        src="" 
        alt="Agrandissement du zafu" 
        class="max-w-[90%] max-h-[90%] rounded-lg shadow-lg"
      />
    </div>

    <!-- Options -->
    <div class="mt-6 space-y-6">

      <!-- Taille (slider avec marks) -->
      <div>
        <input 
          type="range" 
          id="size-slider" 
          min="0" 
          max={sizes.length - 1} 
          step="1" 
          value="0" 
          list="size-marks"
          class="w-full"
        />
        <datalist id="size-marks">
          {sizes.map((s, idx) => (
            <option value={idx} label={s.name}></option>
          ))}
        </datalist>
        <p id="size-label" class="mt-2 text-center text-gray-700 font-medium"></p>
      </div>

      <!-- Type -->
      <div>
        <div class="flex gap-4">
          {types.map(t => (
            <label class="flex items-center gap-2 cursor-pointer">
              <input 
                type="radio" 
                name="type" 
                value={t} 
                class="text-purple-600"
              />
              <span>{t}</span>
            </label>
          ))}
        </div>
      </div>

      <!-- Couleur -->
      <div>

        <!-- Couleurs de base -->
        <div class="mt-2 flex flex-wrap gap-2">
          {baseColors.map(c => (
            <button 
              type="button"
              class="w-8 h-8 rounded-full border-2 border-gray-300"
              style={`background:${c.hex}`}
              data-name={c.name}
              data-hex={c.hex}
              data-img={c.img}
              title={`Zafu ${c.name}`}
            ></button>
          ))}
        </div>

        <!-- Couleur personnalisÃ©e -->
        <div class="mt-3 flex items-center gap-2">
          <input 
            type="color" 
            id="color-picker"
            value="#cccccc" 
            class="w-12 h-10 border rounded cursor-pointer"
          />
          <span id="color-name" class="text-sm text-gray-600">Couleur personnalisÃ©e</span>
        </div>
      </div>
    </div>

    <!-- RÃ©sultat -->
    <div id="result" class="mt-6 p-4 border rounded-lg bg-gray-50 text-center text-lg font-semibold">
      ðŸŒ¸ SÃ©lectionnez une taille, un remplissage et une couleur
    </div>

    <!-- Citation -->
    <blockquote class="mt-6 border-l-4 border-purple-500 pl-4 text-gray-700 bg-purple-50 rounded-r-lg py-2">
      <p class="text-gray-700 italic">
        Â« Sâ€™asseoir sur un zafu, quoi que vous fassiez, vous conduit naturellement vers la respiration zen abdominale. 
        Lâ€™Ã©nergie circule dans tout le corps et lâ€™esprit retrouve son calme. Â»
      </p>
      <p class="text-gray-700 text-right">â€” MaÃ®tre zen Kosen Thibaut</p>
    </blockquote>
  </div>

  <script>
    const zafuImage = document.getElementById("main-zafu-image");
    const colorOverlay = document.getElementById("color-overlay");
    const sizeSlider = document.getElementById("size-slider");
    const sizeLabel = document.getElementById("size-label");
    const result = document.getElementById("result");
    const colorPicker = document.getElementById("color-picker");
    const colorNameSpan = document.getElementById("color-name");
    const lightbox = document.getElementById("lightbox");
    const lightboxImg = document.getElementById("lightbox-img");

    let selectedColor = "";
    let selectedHex = "#cccccc";
    let selectedSize = "";
    let selectedType = "";

    const sizes = [
      { name: "ðŸ‘• S", width: 28, height: 13 },
      { name: "ðŸ‘• M", width: 30, height: 15 },
      { name: "ðŸ‘• L", width: 32, height: 17 },
      { name: "ðŸ‘• Sur mesure", width: null, height: null },
    ];

    const prices = {
      "ðŸ‘• S": { "Vide": 25, "Plein": 40 },
      "ðŸ‘• M": { "Vide": 27, "Plein": 45 },
      "ðŸ‘• L": { "Vide": 30, "Plein": 50 },
      "ðŸ‘• Sur mesure": { "Vide": null, "Plein": null }
    };

    function normalizeHex(hex) {
      return hex.toUpperCase();
    }

    function updateResult() {
      if (selectedSize && selectedType && selectedColor) {
        let price = prices[selectedSize][selectedType];
        const priceText = price ? price + " â‚¬" : "Ã  dÃ©terminer";
        const code = `ZAFU-${selectedSize}-${selectedType}-${selectedColor}`;
        result.innerHTML = `
          <p class="mb-2">Prix (hors frais de port) : <strong>${priceText}</strong></p>
          <p>Pour commander, envoyez le code suivant Ã  <a href="mailto:myokan@hotmail.fr" class="text-purple-600 underline">myokan@hotmail.fr</a> :</p>
          <p class="mt-2 text-purple-700 font-bold">${code}</p>
        `;
      } else {
        result.textContent = "ðŸŒ¸ SÃ©lectionnez une taille, un remplissage et une couleur.";
      }
    }

    // Taille slider
    function updateSizeLabel(idx) {
      const s = sizes[idx];
      selectedSize = s.name;
      sizeLabel.textContent = s.name + " (" + (s.width ? s.width + " Ã— " + s.height + " cm" : "sur mesure") + ")";
      updateResult();
    }
    sizeSlider.addEventListener("input", () => updateSizeLabel(parseInt(sizeSlider.value)));
    updateSizeLabel(0); // initialize

    // Type radios
    document.querySelectorAll("input[name='type']").forEach(radio => {
      radio.addEventListener("change", () => {
        selectedType = radio.value;
        updateResult();
      });
    });

    // Base color buttons
    document.querySelectorAll("[data-name]").forEach(btn => {
      btn.addEventListener("click", () => {
        selectedColor = btn.dataset.name;
        selectedHex = normalizeHex(btn.dataset.hex);
        colorNameSpan.textContent = selectedColor;
        zafuImage.src = btn.dataset.img;
        colorOverlay.classList.add("hidden");
        updateResult();
        colorPicker.value = "#cccccc";
      });
    });

    // Custom color picker
    colorPicker.addEventListener("input", () => {
      selectedHex = normalizeHex(colorPicker.value);
      selectedColor = selectedHex.replace("#","").toUpperCase();
      colorNameSpan.textContent = selectedHex;
      zafuImage.src = "/zafu-plein-violet-pois.webp";
      colorOverlay.style.background = selectedHex;
      colorOverlay.classList.remove("hidden");
      updateResult();
    });

    // Lightbox
    zafuImage.addEventListener("click", () => {
      lightboxImg.src = zafuImage.src;
      lightbox.classList.remove("hidden");
      lightbox.classList.add("flex");
    });
    lightbox.addEventListener("click", () => {
      lightbox.classList.add("hidden");
      lightbox.classList.remove("flex");
    });
  </script>
</Base>
