---
import Base from "../layouts/Layout.astro";
import { Icon } from "astro-icon/components";

const zafus = [
  { name: "S", height: "28", width: "13", price: "25", type: "Vide", icon: "bx:bxs-data" },
  { name: "    M", height: "30", width: "15", price: "27", type: "Vide", icon: "bx:bxs-window-alt" },
  { name: "L", height: "32", width: "20", price: "30", type: "Vide", icon: "bx:bxs-briefcase" },
  { name: "S", height: "28", width: "13", price: "50", type: "Plein", icon: "bx:bxs-data" },
  { name: "M", height: "30", width: "15", price: "45", type: "Plein", icon: "bx:bxs-window-alt" },
  { name: "L", height: "32", width: "20", price: "40", type: "Plein", icon: "bx:bxs-briefcase" },
];

const zafuInfo = {
  material: "100% coton",
  colors: ["Noir", "Marron", "Rouge", "Vert", "Bleu"],
  customColors: true,
  filling: "Kapok (fibre végétale provenant du kapokier, récoltée en Asie, Amérique du Sud, Afrique)",
  customMade: true,
  orderEmail: "myokan@hotmail.fr",
};

const colorMap = {
  "Noir": "#000000",
  "Marron": "#8B4513",
  "Rouge": "#C21807",
  "Vert": "#2E8B57",
  "Bleu": "#1E40AF",
};

const images = [
  "zafus-vides-gris.webp",
  "zafu-plein-violet-pois.webp",
  "zafu-plein-violet.webp",
  "zafu-plein-orange.webp",
  "zafu-vide-framboise.webp",
  "zafus-pile.webp",
  "zafu-bleu-fonce.webp",  
];
---

<Base title="Zafus artisanaux">
  <main class="mt-16 px-4 max-w-6xl mx-auto">
    <h2 class="text-4xl lg:text-5xl font-bold text-gray-800">Trouvez votre zafu&nbsp;!</h2>
    <p class="text-lg mt-4 text-gray-600">Zafus artisanaux réalisés dans la tradition japonaise par une nonne zen.</p>

    <!-- Tableau -->
    <div class="overflow-x-auto mt-8">
      <table class="min-w-full border border-gray-200 divide-y divide-gray-200 text-left">
        <thead class="bg-gray-100">
          <tr>
            <th class="px-4 py-2">Taille</th>
            <th class="px-4 py-2">Type</th>
            <th class="px-4 py-2">Hauteur (cm)</th>
            <th class="px-4 py-2">Largeur (cm)</th>
            <th class="px-4 py-2">Prix (€)</th>
          </tr>
        </thead>
        <tbody class="divide-y divide-gray-200">
          {zafus.map((zafu, index) => (
            <tr class={index % 2 === 0 ? "bg-white" : "bg-gray-50"}>
              <td class="px-4 py-2 text-gray-800 font-semibold">{zafu.name}</td>
              <td class="px-4 py-2 text-gray-700">{zafu.type}</td>
              <td class="px-4 py-2 text-gray-700">{zafu.height}</td>
              <td class="px-4 py-2 text-gray-700">{zafu.width}</td>
              <td class="px-4 py-2 text-gray-700">{zafu.price}</td>
            </tr>
          ))}
        </tbody>
      </table>
    </div>

    <!-- Galerie -->
    <div class="mt-12">
      <div class="grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 gap-4">
        {images.map((src, index) => (
          <img
            src={src}
            alt="Zafu"
            class="rounded-lg shadow-md w-full object-cover cursor-pointer hover:opacity-80 transition"
            data-index={index}
          />
        ))}
      </div>
    </div>

    <!-- Infos -->
    <div class="mt-6 text-gray-700">
      <p><strong>Matériau&nbsp;:</strong> {zafuInfo.material}</p>

      <!-- Nuancier HTML -->
      <div class="mt-4">
        <p class="font-semibold mb-2">Couleurs disponibles</p>
        <div class="flex flex-wrap gap-4 items-center">
          {zafuInfo.colors.map((color) => (
            <div class="flex flex-col items-center text-center">
              <div
                role="img"
                aria-label={color}
                title={color}
                style={`background: ${colorMap[color] || "#cccccc"}`}
                class="w-12 h-12 rounded-full border border-gray-300 shadow-sm"
              />
              <span class="text-sm mt-2 text-gray-700">{color}</span>
            </div>
          ))}
          {zafuInfo.customColors && (
            <div class="flex flex-col items-center text-center">
              <div class="w-12 h-12 rounded-full border border-dashed border-gray-300 flex items-center justify-center">
                <svg xmlns="http://www.w3.org/2000/svg" class="w-5 h-5 text-gray-500" fill="none" viewBox="0 0 24 24" stroke="currentColor" stroke-width="2">
                  <path stroke-linecap="round" stroke-linejoin="round" d="M12 4v16m8-8H4" />
                </svg>
              </div>
              <span class="text-sm mt-2 text-gray-700">Couleur sur-mesure</span>
            </div>
          )}
        </div>

        <!-- Optionnel : petit texte d'aide -->
        <p class="text-xs text-gray-500 mt-3">Les teintes affichées sont indicatives. Pour un rendu précis, demandez un échantillon par mail.</p>
      </div>
      <!-- /Nuancier -->

      {zafuInfo.customColors && <p class="mt-3">Possibilité de demander une couleur à votre convenance (ex: rouge carmin, bleu turquoise, vert émeraude…)</p>}
      <p class="mt-2"><strong>Remplissage&nbsp;:</strong> {zafuInfo.filling}</p>
      {zafuInfo.customMade && <p>Je fabrique des zafus sur mesure.</p>}
      <p class="mt-4 font-semibold">Commandes par mail : <a href={`mailto:${zafuInfo.orderEmail}`} class="text-gray-800 underline">{zafuInfo.orderEmail}</a></p>
    </div>

  </main>

  <!-- Lightbox -->
  <div id="lightbox" class="fixed inset-0 bg-black bg-opacity-80 hidden items-center justify-center z-50">
    <button id="prev" class="absolute left-4 text-white text-3xl top-1/2 -translate-y-1/2">&#10094;</button>
    <img id="lightbox-img" src="" alt="Zafu agrandi" class="max-h-[90%] max-w-[90%] rounded-lg shadow-xl" />
    <button id="next" class="absolute right-4 text-white text-3xl top-1/2 -translate-y-1/2">&#10095;</button>
  </div>

  <script is:inline client:load>
    const images = document.querySelectorAll("[data-index]");
    const lightbox = document.getElementById("lightbox");
    const img = document.getElementById("lightbox-img");
    const prevBtn = document.getElementById("prev");
    const nextBtn = document.getElementById("next");

    let currentIndex = 0;

    function showLightbox(index) {
      currentIndex = index;
      img.src = images[currentIndex].getAttribute("src");
      lightbox.classList.remove("hidden");
      lightbox.classList.add("flex");
    }

    function hideLightbox() {
      lightbox.classList.add("hidden");
      lightbox.classList.remove("flex");
    }

    function showPrev() {
      currentIndex = (currentIndex - 1 + images.length) % images.length;
      img.src = images[currentIndex].getAttribute("src");
    }

    function showNext() {
      currentIndex = (currentIndex + 1) % images.length;
      img.src = images[currentIndex].getAttribute("src");
    }

    images.forEach((image, index) => {
      image.addEventListener("click", () => showLightbox(index));
    });

    prevBtn.addEventListener("click", (e) => { e.stopPropagation(); showPrev(); });
    nextBtn.addEventListener("click", (e) => { e.stopPropagation(); showNext(); });
    lightbox.addEventListener("click", hideLightbox);
  </script>
</Base>
